# Usamos una imagen base que ya tiene Python 3.13.5 y generalmente Debian/Ubuntu.
# Esto es más limpio que partir de deepdoctection si ya resolviste las dependencias.
# Nota: La disponibilidad de python:3.13.5 puede depender del tiempo, pero aquí asumimos que existe.
FROM python:3.13.5-slim

# 1. Configurar Entorno
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE 1
ENV APP_HOME="/home/webapp/files"
ENV DEEPDOCTECTION_CACHE="/root/.cache/deepdoctection"

# 2. Instalar la librería C de Zbar
# Esto soluciona el error "Unable to find zbar shared library"
RUN apt-get update && \
    apt-get install -y libzbar0 build-essential python3-pip python3-opencv tesseract-ocr poppler-utils git
#    rm -rf /var/lib/apt/lists/*

RUN mkdir -p $DEEPDOCTECTION_CACHE

# 3. Crear y establecer el directorio de trabajo
WORKDIR ${APP_HOME}

# 4. Copiar e instalar dependencias Python
# Copiamos primero el requirements.txt para aprovechar el caché de Docker
COPY ./backend/requirements.txt .
RUN python3 -m pip install --no-cache-dir -r requirements.txt

# 5. Copiar el código fuente
# Copiamos la carpeta 'backend' al directorio de trabajo
COPY ./backend /backend

# 6. Comando de Ejecución (Asumiendo que gunicorn está en requirements.txt)
# Nota: El archivo principal es /backend/app.py
CMD ["python3", "-m", "gunicorn", "-b", "0.0.0.0:5010", "app:app"]